
@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="flightshop-admin-login-view" style="display: none;">
    <h2>Log In</h2>

    <form onsubmit="submitAdminLogin(); return false;">
        <div class="row">
            <div class="col-sm-5 form-group">
                <input id="flightshop-admin-username" class="form-control" type="text" placeholder="Username" required />
            </div>
            <div class="col-sm-5 form-group">
                <input id="flightshop-admin-password" class="form-control" type="password" placeholder="Password" required />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8 form-group">
                <input id="keep-admin-logged-in" type="checkbox" class="form-control" />
                <label for="keep-admin-logged-in">Stay signed in</label>
            </div>
            <div class="col-sm-2">
                <button type="submit" class="btn btn-success">Log In</button>
            </div>
        </div>
    </form>
</div>
<div id="flightshop-admin-products-view" style="display: none;">
    <h2>Products</h2>
    <p>
        <input id="flightshop-admin-product-search" class="form-control" placeholder="Search products..." oninput="adminProductSearchChange()" />
        <button class="btn btn-info" onclick="addNewProduct();">+ Add Product</button>
    </p>
    <ul id="flightshop-admin-products-list"></ul>
</div>

<script>
    function adminProductSearchChange() {
        var searchValue = document.getElementById('flightshop-admin-product-search').value;
        if (searchValue) {
            searchValue = searchValue.toLowerCase().trim();
        }

        var productIds = Object.keys(_products);
        for (var i = 0; i < productIds.length; i++) {
            var product = _products[productIds[i]];
            var isVisible = searchValue ? product.code.toLowerCase().includes(searchValue) || (product.shortDescription && product.shortDescription.toLowerCase().includes(searchValue)) : true;
            document.getElementById('product-item-' + product.id).style.display = isVisible ? 'block' : 'none';
        }
    }

    /** found at https://stackoverflow.com/questions/105034. mathematically, risk of collision is rather low, to the point this is very likely to be safe enough for the purpose it serves. */
    function generateUuid() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
          });
    }

    function addNewProduct() {
        var productInfo = {
            id: generateUuid(),
            code: '',
            shortDescription: '',
            longDescription: ''
        };
        var productItem = getNewProductItem(productInfo);
        var productList = document.getElementById('flightshop-admin-products-list');
        productList.insertBefore(productItem, productList.firstChild);
    }

    function uploadProduct(productId) {
        var productImg = document.getElementById('product-img-' + productId);
        if (productImg) { // product has been attached to DOM (check for misfire of event, possibly due to closure?)
            document.getElementById('product-save-' + productId).disabled = true;
            document.getElementById('product-cancel-btn-' + productId).innerHTML = '&#128465; delete';

            var formData = new FormData();
            var imgFiles = productImg.files;
            var imgFile = imgFiles && imgFiles.length ? imgFiles[0] || null : null;
            var drawingInput = document.getElementById('product-drawing-' + productId);
            var drawingFiles = drawingInput.files;
            var drawingFile = drawingFiles && drawingFiles.length ? drawingFiles[0] || null : null;
            var code = document.getElementById('product-code-' + productId).value;
            var shortDesc = document.getElementById('product-short-desc-' + productId).value; 
            var longDesc = document.getElementById('product-long-desc-' + productId).value;
            var categoryId = document.getElementById('product-category-' + productId).value;
            var subCategoryId = document.getElementById('product-sub-category-' + productId).value;
            var mostPopular = document.getElementById('product-most-popular-' + productId).checked ? true : false;

            formData.append('id', productId);
            formData.append('code', code);
            formData.append('shortDescription', shortDesc);
            formData.append('longDescription', longDesc);
            formData.append('categoryId', categoryId);
            formData.append('subCategoryId', subCategoryId);
            formData.append('mostPopular', mostPopular);

            if (imgFile) {
                formData.append('image', imgFile);
            }
            if (drawingFile) {
                formData.append('drawing', drawingFile);
            }

            var request = new XMLHttpRequest();
            var imageFilename = productImg.value ? productImg.value.replace(/^.*?([^\\\/]*)$/, '$1') :  (_products[productId] ? _products[productId].imageFilename : null);
            var drawingFilename = drawingInput.value ? drawingInput.value.replace(/^.*?([^\\\/]*)$/, '$1') : (_products[productId] ? _products[productId].drawingFilename : null);
            request.onload = function () {
                _products[productId] = {
                    id: productId,
                    code: code,
                    shortDescription: shortDesc,
                    longDescription: longDesc,
                    mostPopular: mostPopular,
                    imageFilename: imageFilename,
                    drawingFilename: drawingFilename
                };
            }
            request.open("post", '@Url.Action("CreateOrUpdateProduct", "Admin")');
            request.setRequestHeader("Authorization", "bearer " + getToken());
            request.send(formData);
        }
    }

    function getToken() {
        return window.sessionStorage.getItem('token') || window.localStorage.getItem('token') || null;
    }

    function checkAuth(err) {
        if (err.status == 401) {
            document.getElementById('flightshop-admin-products-view').style.display = 'none';
            document.getElementById('flightshop-admin-login-view').style.display = 'block';
        }
    }

    function cancelProductUpdates(productId, originalProduct, productCancelBtn) {
        document.getElementById('product-save-' + productId).disabled = true;

        document.getElementById('product-img-' + productId).value = null;
        document.getElementById('product-drawing-' + productId).value = null;
        document.getElementById('product-code-' + productId).value = originalProduct.code;
        document.getElementById('product-short-desc-' + productId).value = originalProduct.shortDescription;
        document.getElementById('product-long-desc-' + productId).value = originalProduct.longDescription;
        document.getElementById('product-most-popular-' + productId).value = originalProduct.mostPopular;

        var categoryInput = document.getElementById('product-category-' + productId);
        var originalIndex = -1;
        for (var i = 0; i < categoryInput.childNodes.length && originalIndex < 0; i++) {
            if (categoryInput.childNodes[i].value === originalProduct.categoryId) {
                originalIndex = i;
            }
        }
        categoryInput.selectedIndex = originalIndex;

        var subCategoryInput = document.getElementById('product-sub-category-' + productId);
        originalIndex = -1;
        for (var i = 0; i < subCategoryInput.childNodes.length && originalIndex < 0; i++) {
            if (subCategoryInput.childNodes[i].value === originalProduct.subCategoryId) {
                originalIndex = i;
            }
        }
        subCategoryInput.selectedIndex = originalIndex;

        productCancelBtn.innerHTML = '&#128465; delete';
        productCancelBtn.setAttribute('x-action', 'delete');
        productCancelBtn.removeAttribute('disabled');
    }

    function cancelOrDeleteProduct(productId) {
        var productCancelBtn = document.getElementById('product-cancel-btn-' + productId);
        if (productCancelBtn) { // product has been attached to DOM (check for misfire of event, possibly due to closure?)
            productCancelBtn.disabled = true;
            var action = productCancelBtn.getAttribute('x-action');
            if (action === 'delete') {
                var deletedItem = document.getElementById('product-item-' + productId);
                document.getElementById('flightshop-admin-products-list').removeChild(deletedItem);
                delete _products[productId];
                $.ajax({
                    type: 'DELETE',
                    url: '@Url.Action("Product", "Admin")' + '/' + productId,
                    headers: {
                        Authorization: 'bearer ' + getToken()
                    }
                }).fail(function (err) {
                    checkAuth(err);
                })
            }
            else if (action === 'cancel') {
                var originalProduct = _products[productId];
                if (originalProduct) {
                    cancelProductUpdates(productId, originalProduct, productCancelBtn);
                }
                else {
                    var canceledUnsavedItem = document.getElementById('product-item-' + productId);
                    document.getElementById('flightshop-admin-products-list').removeChild(canceledUnsavedItem);
                }
            }
            else {
                console.error('Could not "cancel" or "delete" product "' + productId + '" because action given was "' + action + '", which is not recognized. Please contact developer for support.')
            }
        }
    }

    function productChanged(productId) { 
        var cancelOrDeleteBtn = document.getElementById('product-cancel-btn-' + productId);
        if (cancelOrDeleteBtn) { // product has been attached to DOM (check for misfire of event, possibly due to closure?)
            cancelOrDeleteBtn.setAttribute('x-action', 'cancel');
            cancelOrDeleteBtn.innerHTML = '&#x26D4; cancel';
            document.getElementById('product-save-' + productId).removeAttribute('disabled');
        }
    }

    function getNewProductItem(product) {
        var productItem = document.createElement('li');
        productItem.id = 'product-item-' + product.id;
        var productItemContent = document.createElement('div');
        productItemContent.style.height = '225px';
        productItemContent.style.borderBottom = '1px solid #ccc';
        productItemContent.style.marginBottom = '20px';
        productItem.appendChild(productItemContent);

        var row1 = document.createElement('div');
        row1.style.height = '140px';
        row1.classList.add('row');
        productItemContent.appendChild(row1);

        var imgCol = document.createElement('div');
        imgCol.classList.add('col-sm-3');
        row1.appendChild(imgCol);

        var productImg = document.createElement('img');
        productImg.id = 'product-img-display-' + product.id;
        productImg.style.maxWidth = '100px';
        productImg.src = _baseUrl + '/products/product-images/' + product.imageFilename;
        productImg.alt = product.code;
        imgCol.appendChild(productImg);

        var productImgUploadLabel = document.createElement('div');
        productImgUploadLabel.innerHTML = 'upload image: ';
        var productImgUpload = document.createElement('input');
        productImgUpload.style.width = '100%';
        productImgUpload.setAttribute('x-product-id', product.id);
        productImgUpload.onchange = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
            var file = document.getElementById('product-img-' + productId).files[0];
            document.getElementById('product-img-display-' + productId).src = window.URL.createObjectURL(file);
        };
        productImgUpload.id = 'product-img-' + product.id;
        productImgUpload.type = 'file';
        productImgUpload.accept = 'image/*';
        productImgUploadLabel.appendChild(productImgUpload);
        imgCol.appendChild(productImgUploadLabel);

        var drawCol = document.createElement('div');
        drawCol.classList.add('col-sm-3');
        row1.appendChild(drawCol);

        var drawingLabel = document.createElement('div');
        drawingLabel.id = 'product-draw-label-' + product.id;
        drawingLabel.innerHTML = 'drawing: <em>loading...</em>';
        drawCol.appendChild(drawingLabel);
        (function (productId, drawingFilename) {
            $.get(_baseUrl + '/products/drawings/' + drawingFilename)
                .done(function () {
                    document.getElementById('product-draw-label-' + productId).innerHTML = 'drawing: ' + drawingFilename;
            })
            .fail(function () {
                document.getElementById('product-draw-label-' + productId).innerHTML = 'drawing: (none)';
            })
        })(product.id, product.drawingFilename)

        var drawingUploadLabel = document.createElement('div');
        drawingUploadLabel.innerHTML = 'upload drawing: ';
        var drawingUpload = document.createElement('input');
        drawingUpload.style.width = '100%';
        drawingUpload.setAttribute('x-product-id', product.id);
        drawingUpload.onchange = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        };
        drawingUpload.id = 'product-drawing-' + product.id;
        drawingUpload.type = 'file';
        drawingUpload.accept = 'application/pdf';
        drawingUploadLabel.appendChild(drawingUpload);
        drawCol.appendChild(drawingUploadLabel);

        var codeCol = document.createElement('div');
        codeCol.classList.add('col-sm-2');
        row1.appendChild(codeCol);

        var codeInput = document.createElement('input');
        codeInput.id = 'product-code-' + product.id;
        codeInput.style.width = '100%';
        codeInput.setAttribute('x-product-id', product.id);
        codeInput.placeholder = 'Code ex. "CB4023"';
        codeInput.value = product.code;
        codeInput.oninput = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        };
        codeCol.appendChild(codeInput);

        var shortDescCol = document.createElement('div');
        shortDescCol.classList.add('col-sm-2');
        row1.appendChild(shortDescCol);

        var shortDesc = document.createElement('input');
        shortDesc.id = 'product-short-desc-' + product.id;
        shortDesc.style.width = '100%';
        shortDesc.setAttribute('x-product-id', product.id);
        shortDesc.placeholder = 'Short description';
        shortDesc.value = product.shortDescription;
        shortDesc.oninput = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        };
        shortDescCol.appendChild(shortDesc);

        var mostPopularCol = document.createElement('div');
        mostPopularCol.classList.add('col-sm-2');
        row1.appendChild(mostPopularCol);

        var mostPopular = document.createElement('div');
        var mostPopularInput = document.createElement('input');
        mostPopularInput.id = 'product-most-popular-' + product.id;
        mostPopularInput.setAttribute('x-product-id', product.id);
        mostPopularInput.type = 'checkbox';
        mostPopularInput.checked = product.mostPopular;
        mostPopularInput.onchange = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        }
        var mostPopularLabel = document.createElement('span');
        mostPopularLabel.innerHTML = 'Most popular';
        mostPopular.appendChild(mostPopularInput);
        mostPopular.appendChild(mostPopularLabel);
        mostPopularCol.appendChild(mostPopular);

        var row2 = document.createElement('div');
        row2.style.height = '85px';
        row2.classList.add('row');
        productItemContent.appendChild(row2);

        var longDescCol = document.createElement('div');
        longDescCol.classList.add('col-sm-6');
        row2.appendChild(longDescCol);

        var longDesc = document.createElement('textarea');
        longDesc.id = 'product-long-desc-' + product.id;
        longDesc.style.width = '100%';
        longDesc.setAttribute('x-product-id', product.id);
        longDesc.placeholder = 'Long description';
        longDesc.value = product.longDescription;
        longDesc.rows = 1;
        longDesc.oninput = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        };
        longDescCol.appendChild(longDesc);

        var categoryCol = document.createElement('div');
        categoryCol.classList.add('col-sm-2');
        row2.appendChild(categoryCol);

        var categoryDropdown = document.createElement('select');
        categoryDropdown.id = 'product-category-' + product.id;
        categoryDropdown.style.width = '100%';
        categoryDropdown.setAttribute('x-product-id', product.id);
        var selectedIndex = 0;
        _categories.forEach(function (category, index) {
            var categoryOption = document.createElement('option');
            categoryOption.value = category.id;
            categoryOption.innerHTML = category.name;
            categoryDropdown.appendChild(categoryOption);
            if (category.id == product.categoryId) {
                selectedIndex = index;
            }
        });
        categoryDropdown.selectedIndex = selectedIndex;
        categoryDropdown.onchange = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        }
        categoryCol.appendChild(categoryDropdown);

        var subCategoryCol = document.createElement('div');
        subCategoryCol.classList.add('col-sm-2');
        row2.appendChild(subCategoryCol);

        var subCategoryDropdown = document.createElement('select');
        subCategoryDropdown.id = 'product-sub-category-' + product.id;
        subCategoryDropdown.style.width = '100%';
        subCategoryDropdown.setAttribute('x-product-id', product.id);
        selectedIndex = 0;
        _subCategories.forEach(function (subCategory, index) {
            var categoryOption = document.createElement('option');
            categoryOption.value = subCategory.id;
            categoryOption.innerHTML = subCategory.name;
            subCategoryDropdown.appendChild(categoryOption);
            if (subCategory.id == product.subCategoryId) {
                selectedIndex = index;
            }
        });
        subCategoryDropdown.selectedIndex = selectedIndex;
        subCategoryDropdown.onchange = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            productChanged(productId);
        }
        subCategoryCol.appendChild(subCategoryDropdown);

        var buttonsCol = document.createElement('div');
        buttonsCol.classList.add('col-sm-2');
        row2.appendChild(buttonsCol);

        var saveButton = document.createElement('button');
        saveButton.id = 'product-save-' + product.id;
        saveButton.style.marginRight = '0.5em';
        saveButton.setAttribute('x-product-id', product.id);
        saveButton.classList.add('btn', 'btn-success');
        saveButton.disabled = true;
        saveButton.innerHTML = '&#x2714; save';
        saveButton.onclick = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            uploadProduct(productId);
        };
        buttonsCol.appendChild(saveButton);

        var cancelOrDeleteButton = document.createElement('button');
        cancelOrDeleteButton.id = 'product-cancel-btn-' + product.id;
        cancelOrDeleteButton.setAttribute('x-product-id', product.id);
        cancelOrDeleteButton.classList.add('btn', 'btn-danger');
        cancelOrDeleteButton.setAttribute('x-action', 'delete');
        cancelOrDeleteButton.innerHTML = '&#128465; delete';
        // delete icon
        cancelOrDeleteButton.onclick = function (event) {
            var productId = event.target.getAttribute('x-product-id');
            cancelOrDeleteProduct(productId);
        };
        buttonsCol.appendChild(cancelOrDeleteButton);

        return productItem;
    }

    var _baseUrl = '@Url.Action("Index", "Admin")'.split('/Admin')[0];
    var _products = {};
    var _categories = [];
    var _subCategories = [];
    function getProducts(token) {
         $.ajax({
                url: '@Url.Action("Products", "Admin")',
                type: 'POST',
                headers: {
                    Authorization: 'bearer ' + token
                }
            })
             .done(function (response) {
                 _products = {};
                 var products = response.products;
                 _categories = response.categories;
                 _subCategories = response.subCategories;
                 var productList = document.getElementById('flightshop-admin-products-list');

                 for (var i = 0; i < products.length; i++) {
                     var product = products[i];
                     _products[product.id] = product;
                     var productItem = getNewProductItem(product);                     

                     // todo: add sub-form/btn for adding and editing parts, using product.Parts -- btn for adding should be at top probs
                     // todo: add endpts for UpdatePart, DeleteProduct, and DeletePart, and UpdateProduct/part/etc DAL functions
                     // todo: add-product btn at top of view

                     productList.appendChild(productItem);
                 }

                     document.getElementById('flightshop-admin-login-view').style.display = 'none';
                     document.getElementById('flightshop-admin-products-view').style.display = 'block';
                })
                .fail(function (err) {
                    console.log('bugga ', err)
                })
    }

    function submitAdminLogin() {
        var username = document.getElementById('flightshop-admin-username').value;
        var password = document.getElementById('flightshop-admin-password').value;
        if (username && password) {
            var loginUrl = '@Url.Action("Login", "Auth")';
            var loginRequest = { Username: username, Password: password };
            $.ajax({
                type: 'POST',
                url: loginUrl,
                data: loginRequest
            })
                .done(function (response) {
                    var staySignedIn = document.getElementById('keep-admin-logged-in').checked || false;
                    if (staySignedIn) {
                        window.sessionStorage.setItem('token', response.token);
                    } else {
                        window.localStorage.setItem('token', response.token);
                    }
                    getProducts(response.token);
                })
                .fail(function () {
                    alert('hell nah!')
                    // TODO: alert problem loggin in
                });
        }

      
    }

      window.addEventListener('load', function () {
          var token = getToken();
            if (token) {
                getProducts(token);
            } else {
                document.getElementById('flightshop-admin-login-view').style.display = 'block';
            }
        });
</script>